version: '3.8'

services:
  # Cosmos Load Tester CLI
  cosmosloadtester-cli:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cosmosloadtester-cli
    volumes:
      # Mount config directory for profile persistence
      - ./config:/home/cosmosload/.cosmosloadtester
      # Mount results directory for output files
      - ./results:/app/results
      # Mount examples directory (optional)
      - ./examples:/app/examples:ro
    environment:
      # Set log level
      - LOG_LEVEL=info
      # Set timezone
      - TZ=UTC
    # Keep container running in interactive mode
    stdin_open: true
    tty: true
    # Default command - can be overridden
    command: ["sh", "-c", "echo 'CosmosLoadTester CLI Ready! Use: docker-compose exec cosmosloadtester-cli cosmosloadtester-cli --help' && sleep infinity"]

  # Optional: Local Cosmos testnet for testing
  # Uncomment the following section if you want to run a local testnet
  # cosmos-testnet:
  #   image: cosmoshub:latest
  #   container_name: cosmos-testnet
  #   ports:
  #     - "26656:26656"
  #     - "26657:26657"
  #     - "1317:1317"
  #   volumes:
  #     - ./testnet-data:/root/.gaia
  #   environment:
  #     - CHAIN_ID=cosmoshub-testnet
  #   command: ["gaiad", "start", "--rpc.laddr=tcp://0.0.0.0:26657"]

  # Optional: Redis for caching
  # redis:
  #   image: redis:7-alpine
  #   container_name: cosmosloadtester-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis-data:/data
  #   command: ["redis-server", "--appendonly", "yes"]

  # Optional: Prometheus for monitoring
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: cosmosloadtester-prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     - prometheus-data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'

  # Optional: Grafana for visualization
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: cosmosloadtester-grafana
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #     - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin

volumes:
  redis-data:
  prometheus-data:
  grafana-data: 